Idea: Low-complexity lossy codec.
* Goals
** Moderately fast to decode;
** Not excessively complicated;
** Could be used in a similar way to T.81 JPEG.
* Probably use modified QOI-like design for the color endpoints.
* Use a separate coding for the color-cells.

Colorspace:
* 2x YUV
* Possibly, encode the color planes separately.
* Probably: Y=(8*G+5*R+3*B)/16, U=(R-Y)/2+128, V=(B-Y)/2+128

* Y=(8*G+5*R+3*B)/16
* U=(B-Y)/2+128
* V=(R-Y)/2+128

* R=Y+(V-128)*2
* B=Y+(U-128)*2
* G=(16*Y-5*R-3*B)/8




Headers:
  lcif_head {
  FOURCC magic;  //00, Magic, 'lcif'
  S32LE xsize;   //04, X size
  S32LE ysize;   //08, Y size
  BYTE chan;     //0C, 3=RGB, 4=RGBA
  BYTE clrs;     //0D, 0=YUV
  BYTE pad1;     //0E, Reserved, MBZ
  BYTE pad2;     //0F, Reserved, MBZ
  };

The header will be followed by the color endpoint plane.
The color endpoint plane will be followed by the block plane.
Each plane will be followed by two 00 bytes.

If an alpha channel is present, there will be an additional block plane holding the alpha blocks. Howver, the largest allowed block type in this plane will be 4x4x2. In this case, the color plane will also encode an alpha channel.

If no alpha channel is present, the alpha value in the color plane will be ignored.

Nominally, the image will be stored with its origin in the lower-left corner.
* If the Y size is negative, upper left.


=== Color Endpoint Plane ===

The endpoint plane encodes endpoints and endpoint deltas in a byte oriented format, using a 64-entry color lookup table. Each time a new color is encoded, it is added to this lookup table. This table starts out containing all zeros.

Index into the table is a hash of the color:
* (y*3+u*5+v*7+a*11)&63

Initial starting RGBA values are Y=0, U=0, V=0, A=255.

Encoded Tokens:
* 00iiiiii
** Intex into lookup table.
* 01yyuuvv
** Delta to each YUV value, -2 .. 1
* 10yyyyyy uuuuvvvv
** Apply a delta Y, -32 .. 31.
** Apply deltas to the U and V channels, -8 .. 7.
* 110rrrrr, RLE 1 .. 32
* 1110rrrr, RLE 32 .. 48
* 11110rrr rrrrdddd dddddddd
** Copy 4..131 pixels, within a 4K pixel window.
* 111110rr rrrrrrrr dddddddd dddddddd
** Copy 4..1027 pixels, within a 64K pixel window.
* 11111100 rrrrrrrr rrrrdddd dddddddd dddddddd
** Copy 4..4099 pixels, within a 1M pixel window.
* 11111101
** RLE run of 64 pixels.
* 11111110 yyyyyyyy uuuuuuuu vvvvvvvv
** Raw YUV color.
* 11111111 yyyyyyyy uuuuuuuu vvvvvvvv aaaaaaaa
** Raw YUVA color.

The endpoint plane will encode 2 endpoints per block on alternating scanlines, for example, a 320x200 image will be 80x50 in terms of the endpoint plane.


=== Block Plane ===

Color-Cell Formats:
* 4x4x3(Y) + 2x2x2(U) + 2x2x2(V)
* 4x4x2
* 4x4x1
* 2x2x2 (pixels)
* 2x2x1 (gradient)
* Fixed pattern
* Flat color.

Block pixels will be stored in little-endian order, with a low-to-high pixel ordering.

Within the Block Plane, the blocks will behave as-if they were expanded to a 64-bit nominal format:
* (47:0): Y Pixels, 4x4 at 3 bits per pixel.
* (55:48): U Pixels, 2x2 at 2 bits per pixel.
* (55:48): V Pixels, 2x2 at 2 bits per pixel.
* When Expanding 2 to 3 bits, 00=000, 01=010, 10=101, 11=111
** The U/V bits will be filled with 0x6969
* For the Alpha Block Plane, the block will be normalized as 4x4x2.

The block hash will be defined as:
* v1=(v<<5)^(v>>31);
* v1=(v1<<3)^(v1>>17);
* v1=(v1<<1)^(v1>>11);
* h=(v1^(v1>>7))&63;

The block-bits and hash will effectively give the location in the lookup table.




Tag Stream:
* 00iiiiii
** Repeat Recent Block.

* 01pppppp
** Fixed Pattern

* 1000-nnnn
** 1-16x Flat Color

* 1001-nnnn yyyyyyyy
** 1-16x 2x2x2

* 1010-nnnn yyyyyyyy-yyyyyyyy
** 1-16x 4x4x1

* 1011-nnnn yyyyyyyy-yyyyyyyy-yyyyyyyy-yyyyyyyy
** 1-16x 4x4x2

* 110zzzzz -

* 11100ppp
** Simple Gradient

* 11101nnn  yy yy yy yy yy yy uu vv
** 1-8x Y4x4x3+U2x2x2+V2x2x2

* 11110rrr rrrrdddd dddddddd
** LZ Match: Copy 4..131 blocks, within a 4K block window.
* 111110rr rrrrrrrr dddddddd dddddddd
** Copy 4..1027 blocks, within a 64K block window.
* 11111100 rrrrrrrr rrrrdddd dddddddd dddddddd
** Copy 4..4099 blocks, within a 1M block window.

* 11111101
** Run of 64 Flat Color Blocks.

* 11111110 -


Gradients:
* 0: Horizontal Rise (0123-0123-0123-0123)
* 1: Horizontal Fall (3210-3210-3210-3210)
* 2: Verical Rise (0000-1111-2222-3333)
* 3: Vertical Fall (3333-2222-1111-0000)
* 4: Diagonal Top-Left Lower-Right Rise (0011-0122-1223-1233)
* 5: Diagonal Top-Left Lower-Right Fall (3322-3211-2110-2100)
* 6: Diagonal Lower-Left Top-Right Rise (1233-1223=0122-0011)
* 7: Diagonal Lower-Left Top-Right Fall (3322-3211-2110-2100)
