//AHSRC:btlza_fastdfl.c
void BTLZA_BitEncF_EncodeLZLength(BGBBTJ_BTLZA_Context *ctx, int l);
void BTLZA_BitEncF_EncodeLZDist(BGBBTJ_BTLZA_Context *ctx, int d);
void BTLZA_BitEncF_EncodeLZSpecial(BGBBTJ_BTLZA_Context *ctx, int d);
void BTLZA_BitEncF_EncodeLZRun(BGBBTJ_BTLZA_Context *ctx, int l, int d);
int BTLZA_BitEncF_LZEncodeBuffer(BGBBTJ_BTLZA_Context *ctx, byte *ibuf, int isz);
int BTLZA_BitEncF_EncodeBlockDynamic(BGBBTJ_BTLZA_Context *ctx,byte *ibuf, int isz, int last);
int BTLZA_BitEncF_EncodeBlockBTLZH(BGBBTJ_BTLZA_Context *ctx,byte *ibuf, int isz, int last);
int BTLZA_BitEncF_EncodeBlock(BGBBTJ_BTLZA_Context *ctx,byte *ibuf, int isz, int last);
int BTLZA_BitEncF_EncodeStream_I(BGBBTJ_BTLZA_Context *ctx,byte *ibuf, byte *obuf, int isz, int osz);
BGBBTJ_API int BTLZA_BitEncF_EncodeStream32Lvl(byte *ibuf, byte *obuf, int isz, int osz, int l);
BGBBTJ_API int BTLZA_BitEncF_EncodeStream32LvlZl(byte *ibuf, byte *obuf, int isz, int osz, int lvl);
BGBBTJ_API int BTLZA_BitEncF_EncodeStreamXLvl(byte *ibuf, byte *obuf, int isz, int osz, int l);
BGBBTJ_API int BTLZA_BitEncF_EncodeStreamXLvlZl(byte *ibuf, byte *obuf, int isz, int osz, int lvl);
BGBBTJ_API int BTLZA_BitEncF_EncodeStreamXLvlZlc(byte *ibuf, byte *obuf, int isz, int osz, int lvl);
//AHSRC:btlza_bitdecode.c
int BTLZA_BitDec_TransposeByte(int v);
int BTLZA_BitDec_TransposeWord(int v);
int BTLZA_BitDec_SetupTable(byte *cl, int ncl,u16 *tc, u16 *tm, byte *tl, u16 *ti, u16 *tn);
int BTLZA_BitDec_SetupStatic(BGBBTJ_BTLZA_Context *ctx);
int BTLZA_BitDec_DecodeSymbol(BGBBTJ_BTLZA_Context *ctx);
int BTLZA_BitDec_DecodeDistanceSymbol(BGBBTJ_BTLZA_Context *ctx);
int BTLZA_BitDec_DecodeSymbolBasic(BGBBTJ_BTLZA_Context *ctx);
int BTLZA_BitDec_DecodeDistanceSymbolBasic(BGBBTJ_BTLZA_Context *ctx);
int BTLZA_BitDec_DecodeSymbolBasic2(BGBBTJ_BTLZA_Context *ctx);
int BTLZA_BitDec_DecodeDistanceSymbolBasic2(BGBBTJ_BTLZA_Context *ctx);
int BTLZA_BitDec_DecodeSymbolReadBit(BGBBTJ_BTLZA_Context *ctx);
int BTLZA_BitDec_DecodeDistanceSymbolReadBit(BGBBTJ_BTLZA_Context *ctx);
int BTLZA_BitDec_DecodeDistance(BGBBTJ_BTLZA_Context *ctx);
int BTLZA_BitDec_DecodeCodeLengths(BGBBTJ_BTLZA_Context *ctx,byte *cl, int ncl);
int BTLZA_BitDec_DecodeHeader(BGBBTJ_BTLZA_Context *ctx);
int BTLZA_BitDec_DecodeHeaderBTLZH(BGBBTJ_BTLZA_Context *ctx);
int BTLZA_BitDec_DecodeStaticHeader2(BGBBTJ_BTLZA_Context *ctx);
void BTLZA_BitDec_MemCpy(byte *dst, byte *src, int len);
int BTLZA_BitDec_DecodeRun(BGBBTJ_BTLZA_Context *ctx, int sym);
int BTLZA_BitDec_DecodeBlockData(BGBBTJ_BTLZA_Context *ctx);
int BTLZA_BitDec_AlignBitsEnd(BGBBTJ_BTLZA_Context *ctx);
int BTLZA_BitDec_DecodeHeaderBTArith(BGBBTJ_BTLZA_Context *ctx);
int BTLZA_BitDec_DecodeBlock(BGBBTJ_BTLZA_Context *ctx);
int BTLZA_BitDec_DecodeStream(BGBBTJ_BTLZA_Context *ctx,byte *ibuf, byte *obuf, int isz, int osz);
int BTLZA_BitDec_DecodeStreamSz(BGBBTJ_BTLZA_Context *ctx,byte *ibuf, byte *obuf, int isz, int osz, int *rosz, int flags);
//AHSRC:btlza_bitencode.c
int BTLZA_BitEnc_BalanceTree_r(short *nodes, short *nlen, int root, int h, int ml);
void BTLZA_BitEnc_CalcLengths_r(short *nodes, byte *cl, int root, int h);
int BTLZA_BitEnc_BuildLengths(int *stat, int nc, byte *cl, int ml);
int BTLZA_BitEnc_BuildLengthsAdjust(int *stat, int nc, byte *cl, int ml);
void BTLZA_BitEnc_StatLZRun(BGBBTJ_BTLZA_Context *ctx,byte *cs, int *lstat, int *dstat);
void BTLZA_BitEnc_StatLZBuffer(BGBBTJ_BTLZA_Context *ctx,byte *tbuf, byte *mbuf, int n, int *lstat, int *dstat);
void BTLZA_BitEnc_StatLengths(BGBBTJ_BTLZA_Context *ctx,byte *cl, int nc, int *stat);
void BTLZA_BitEnc_EncodeSymbol(BGBBTJ_BTLZA_Context *ctx, int v);
void BTLZA_BitEnc_EncodeLengths(BGBBTJ_BTLZA_Context *ctx, byte *cl, int nc);
void BTLZA_BitEnc_EncodeLZRun(BGBBTJ_BTLZA_Context *ctx, byte *cs);
void BTLZA_BitEnc_EncodeLZBuffer(BGBBTJ_BTLZA_Context *ctx,byte *tbuf, byte *mbuf, int n);
int BTLZA_BitEnc_EncodeBlockStatic(BGBBTJ_BTLZA_Context *ctx,byte *ibuf, int isz, int last);
int BTLZA_BitEnc_EncodeBlock(BGBBTJ_BTLZA_Context *ctx,byte *ibuf, int isz, int last);
int BTLZA_BitEnc_EncodeBlockDynamic(BGBBTJ_BTLZA_Context *ctx,byte *ibuf, int isz, int last);
int BTLZA_BitEnc_EncodeBlockBTLZH(BGBBTJ_BTLZA_Context *ctx,byte *ibuf, int isz, int last);
int BTLZA_BitEnc_EncodeBeginArithmetic(BGBBTJ_BTLZA_Context *ctx);
int BTLZA_BitEnc_EncodeStream_I(BGBBTJ_BTLZA_Context *ctx,byte *ibuf, byte *obuf, int isz, int osz);
BGBBTJ_API int BTLZA_BitEnc_EncodeStream32Lvl(byte *ibuf, byte *obuf, int isz, int osz, int l);
BGBBTJ_API int BTLZA_BitEnc_EncodeStream64Lvl(byte *ibuf, byte *obuf, int isz, int osz, int lvl);
BGBBTJ_API int BTLZA_BitEnc_EncodeStreamXLvl(byte *ibuf, byte *obuf, int isz, int osz, int lvl);
BGBBTJ_API int BTLZA_BitEnc_EncodeStream32LvlZl(byte *ibuf, byte *obuf, int isz, int osz, int lvl);
BGBBTJ_API int BTLZA_BitEnc_EncodeStream64LvlZl(byte *ibuf, byte *obuf, int isz, int osz, int lvl);
BGBBTJ_API int BTLZA_BitEnc_EncodeStreamXLvlZl(byte *ibuf, byte *obuf, int isz, int osz, int lvl);
BGBBTJ_API int BTLZA_BitEnc_EncodeStreamXLvlZlc(byte *ibuf, byte *obuf, int isz, int osz, int lvl);
BGBBTJ_API int BTLZA_BitEnc_EncodeStreamXLvlZlTest(byte *ibuf, byte *obuf, int isz, int osz, int lvl);
//AHSRC:btlza_bitrange.c
void BGBBTJ_BTLZA_Lock();
void BGBBTJ_BTLZA_Unlock();
void BGBBTJ_BTLZA_Lock();
void BGBBTJ_BTLZA_Unlock();
void BTLZA_BitArith_Init();
BGBBTJ_API BGBBTJ_BTLZA_Context *BTLZA_AllocContext(void);
BGBBTJ_API void BTLZA_FreeContext(BGBBTJ_BTLZA_Context *ctx);
int BTLZA_BitArith_InputByte(BGBBTJ_BTLZA_Context *ctx);
void BTLZA_BitArith_OutputByte(BGBBTJ_BTLZA_Context *ctx, int i);
void BTLZA_BitArith_NormalizeOutput(BGBBTJ_BTLZA_Context *ctx);
void BTLZA_BitArith_NormalizeInput(BGBBTJ_BTLZA_Context *ctx);
void BTLZA_BitArith_FlushWBits(BGBBTJ_BTLZA_Context *ctx);
void BTLZA_BitArith_OutputFixedBit(BGBBTJ_BTLZA_Context *ctx, int i);
int BTLZA_BitArith_InputFixedBit(BGBBTJ_BTLZA_Context *ctx);
void BTLZA_BitArith_OutputBit(BGBBTJ_BTLZA_Context *ctx,int i, u32 w);
int BTLZA_BitArith_InputBit(BGBBTJ_BTLZA_Context *ctx, u32 w);
void BTLZA_BitArith_OutputModelBit(BGBBTJ_BTLZA_Context *ctx,int i, byte *mctx);
int BTLZA_BitArith_InputModelBit(BGBBTJ_BTLZA_Context *ctx, byte *mctx);
void BTLZA_BitArith_OutputFixedBits(BGBBTJ_BTLZA_Context *ctx,int v, int n);
int BTLZA_BitArith_InputFixedBits(BGBBTJ_BTLZA_Context *ctx, int n);
int BTLZA_BitArith_InputContextFixedBits(BGBBTJ_BTLZA_Context *ctx, int n);
int BTLZA_BitArith_InputContextFixedBitsLE(BGBBTJ_BTLZA_Context *ctx, int n);
void BTLZA_BitArith_OutputContextModelBits(BGBBTJ_BTLZA_Context *ctx,int v, int n, btlza_prob *mdl, int ctxmask);
int BTLZA_BitArith_InputContextModelBits(BGBBTJ_BTLZA_Context *ctx,int n, btlza_prob *mdl, int ctxmask);
void BTLZA_BitArith_OutputExtraBits(BGBBTJ_BTLZA_Context *ctx,int v, int n, btlza_prob *mdl, int ctxmask);
void BTLZA_BitArith_OutputContextModelBitsLE(BGBBTJ_BTLZA_Context *ctx,int v, int n, btlza_prob *mdl, int ctxmask);
int BTLZA_BitArith_InputContextModelBitsLE(BGBBTJ_BTLZA_Context *ctx,int n, btlza_prob *mdl, int ctxmask);
int BTLZA_BitArith_InputExtraBits(BGBBTJ_BTLZA_Context *ctx,int n, btlza_prob *mdl, int ctxmask);
int BTLZA_BitArith_SetupEncode(BGBBTJ_BTLZA_Context *ctx, byte *out, int sz);
int BTLZA_BitArith_SetupDecode(BGBBTJ_BTLZA_Context *ctx, byte *in, int sz);
int BTLZA_BitArith_SetupBeginEncode(BGBBTJ_BTLZA_Context *ctx);
int BTLZA_BitArith_SetupBeginDecode(BGBBTJ_BTLZA_Context *ctx);
int BTLZA_BitArith_SetupEndDecode(BGBBTJ_BTLZA_Context *ctx);
int btlza_ctxindex(int ctx, int mask);
void BTLZA_BitArith_EncodeSymbol6(BGBBTJ_BTLZA_Context *ctx, int v,btlza_prob *mdl, int ctxmask);
void BTLZA_BitArith_EncodeSymbol8(BGBBTJ_BTLZA_Context *ctx, int v,btlza_prob *mdl, int ctxmask);
void BTLZA_BitArith_EncodeSymbol9(BGBBTJ_BTLZA_Context *ctx, int v,btlza_prob *mdl, int ctxmask);
void BTLZA_BitArith_EncodeSymbol8LE(BGBBTJ_BTLZA_Context *ctx, int v,btlza_prob *mdl, int ctxmask);
int BTLZA_BitArith_DecodeSymbol6(BGBBTJ_BTLZA_Context *ctx,btlza_prob *mdl, int ctxmask);
int BTLZA_BitArith_DecodeSymbol8(BGBBTJ_BTLZA_Context *ctx,btlza_prob *mdl, int ctxmask);
int BTLZA_BitArith_DecodeSymbol9(BGBBTJ_BTLZA_Context *ctx,btlza_prob *mdl, int ctxmask);
int BTLZA_BitArith_DecodeSymbol8LE(BGBBTJ_BTLZA_Context *ctx,btlza_prob *mdl, int ctxmask);
void BTLZA_BitArith_ResetContextWeights(BGBBTJ_BTLZA_Context *ctx);
void BTLZA_BitArith_SetupContextBits(BGBBTJ_BTLZA_Context *ctx, int bits);
void BTLZA_BitArith_ResetRawContextWeights(BGBBTJ_BTLZA_Context *ctx);
void BTLZA_BitArith_SetupRawContextBits(BGBBTJ_BTLZA_Context *ctx, int bits);
BGBBTJ_API int BTLZA_BitArith_EncodeDataCtx(BGBBTJ_BTLZA_Context *ctx, byte *ibuf, int isz, byte *obuf, int osz, int flags);
BGBBTJ_API int BTLZA_BitArith_DecodeDataCtx(BGBBTJ_BTLZA_Context *ctx, byte *ibuf, int isz, byte *obuf, int osz);
BGBBTJ_API int BTLZA_BitArith_EncodeData(byte *ibuf, int isz, byte *obuf, int osz);
BGBBTJ_API int BTLZA_BitArith_DecodeData(byte *ibuf, int isz, byte *obuf, int osz);
BGBBTJ_API int BTLZA_BitArith_EncodeTestData(byte *ibuf, int isz, byte *obuf, int osz);
//AHSRC:btlza_bitstream.c
void BTLZA_BitEnc_WriteByteBasic(BGBBTJ_BTLZA_Context *ctx, int v);
void BTLZA_BitEnc_WriteByteEscape(BGBBTJ_BTLZA_Context *ctx, int v);
void BTLZA_BitDec_WriteByteArithLE(BGBBTJ_BTLZA_Context *ctx, int v);
void BTLZA_BitDec_WriteByteArithBE(BGBBTJ_BTLZA_Context *ctx, int v);
void BTLZA_BitEnc_WriteByte(BGBBTJ_BTLZA_Context *ctx, int v);
void BTLZA_BitEnc_WriteBit(BGBBTJ_BTLZA_Context *ctx, int i);
void BTLZA_BitEnc_Write2Bits(BGBBTJ_BTLZA_Context *ctx, int i);
void BTLZA_BitEnc_Write3Bits(BGBBTJ_BTLZA_Context *ctx, int i);
void BTLZA_BitEnc_Write4Bits(BGBBTJ_BTLZA_Context *ctx, int i);
void BTLZA_BitEnc_Write5Bits(BGBBTJ_BTLZA_Context *ctx, int i);
void BTLZA_BitEnc_Write6Bits(BGBBTJ_BTLZA_Context *ctx, int i);
void BTLZA_BitEnc_Write7Bits(BGBBTJ_BTLZA_Context *ctx, int i);
void BTLZA_BitEnc_Write2Bits(BGBBTJ_BTLZA_Context *ctx, int i);
void BTLZA_BitEnc_Write3Bits(BGBBTJ_BTLZA_Context *ctx, int i);
void BTLZA_BitEnc_Write4Bits(BGBBTJ_BTLZA_Context *ctx, int i);
void BTLZA_BitEnc_Write5Bits(BGBBTJ_BTLZA_Context *ctx, int i);
void BTLZA_BitEnc_Write6Bits(BGBBTJ_BTLZA_Context *ctx, int i);
void BTLZA_BitEnc_Write7Bits(BGBBTJ_BTLZA_Context *ctx, int i);
void BTLZA_BitEnc_WriteNBits(BGBBTJ_BTLZA_Context *ctx, int i, int n);
void BTLZA_BitEnc_FlushBits(BGBBTJ_BTLZA_Context *ctx);
int BTLZA_BitDec_ReadByteBasic(BGBBTJ_BTLZA_Context *ctx);
int BTLZA_BitDec_ReadByteEscape(BGBBTJ_BTLZA_Context *ctx);
int BTLZA_BitDec_ReadByteArithLE(BGBBTJ_BTLZA_Context *ctx);
int BTLZA_BitDec_ReadByteArithBE(BGBBTJ_BTLZA_Context *ctx);
int BTLZA_BitDec_ReadBitBasic(BGBBTJ_BTLZA_Context *ctx);
int BTLZA_BitDec_Read2Bits(BGBBTJ_BTLZA_Context *ctx);
int BTLZA_BitDec_Read3Bits(BGBBTJ_BTLZA_Context *ctx);
int BTLZA_BitDec_Read4Bits(BGBBTJ_BTLZA_Context *ctx);
int BTLZA_BitDec_Read5Bits(BGBBTJ_BTLZA_Context *ctx);
void BTLZA_BitDec_ReadAdjust(BGBBTJ_BTLZA_Context *ctx);
int BTLZA_BitDec_ReadNBitsBasic(BGBBTJ_BTLZA_Context *ctx, int n);
void BTLZA_BitDec_SkipNBitsBasic(BGBBTJ_BTLZA_Context *ctx, int n);
int BTLZA_BitDec_ReadByte(BGBBTJ_BTLZA_Context *ctx);
int BTLZA_BitDec_ReadBit(BGBBTJ_BTLZA_Context *ctx);
int BTLZA_BitDec_ReadNBits(BGBBTJ_BTLZA_Context *ctx, int n);
void BTLZA_BitDec_SkipNBits(BGBBTJ_BTLZA_Context *ctx, int n);
int BTLZA_BitDec_Read2Bits(BGBBTJ_BTLZA_Context *ctx);
int BTLZA_BitDec_Read3Bits(BGBBTJ_BTLZA_Context *ctx);
int BTLZA_BitDec_Read4Bits(BGBBTJ_BTLZA_Context *ctx);
int BTLZA_BitDec_Read5Bits(BGBBTJ_BTLZA_Context *ctx);
int BTLZA_BitDec_Read6Bits(BGBBTJ_BTLZA_Context *ctx);
int BTLZA_BitDec_Read7Bits(BGBBTJ_BTLZA_Context *ctx);
int BTLZA_BitDec_ReadExtraNBits(BGBBTJ_BTLZA_Context *ctx, int n);
int BTLZA_BitDec_ReadRawNBits(BGBBTJ_BTLZA_Context *ctx, int n);
int BTLZA_BitDec_ReadExtraNBitsBasic(BGBBTJ_BTLZA_Context *ctx, int n);
int BTLZA_BitArith_ReadExtraNBitsModel(BGBBTJ_BTLZA_Context *ctx, int n);
int BTLZA_BitDec_ReadLiteralBit(BGBBTJ_BTLZA_Context *ctx);
int BTLZA_BitDec_ReadDistanceBit(BGBBTJ_BTLZA_Context *ctx);
int BTLZA_BitDec_ReadRawBit(BGBBTJ_BTLZA_Context *ctx);
int BTLZA_BitDec_PeekWord(BGBBTJ_BTLZA_Context *ctx);
void BTLZA_BitDec_AlignByte(BGBBTJ_BTLZA_Context *ctx);
int BTLZA_BitDec_ReadAlignedByte(BGBBTJ_BTLZA_Context *ctx);
int BTLZA_BitDec_ReadAlignedWord(BGBBTJ_BTLZA_Context *ctx);
//AHSRC:btlza_decode.c
int BTLZA_Decode_DecodeDistance(BGBBTJ_BTLZA_Context *ctx);
int BTLZA_Decode_DecodeRun(BGBBTJ_BTLZA_Context *ctx, int sym);
int BTLZA_Decode_DecodeSymbol(BGBBTJ_BTLZA_Context *ctx);
int BTLZA_Decode_DecodeBlockData(BGBBTJ_BTLZA_Context *ctx);
int BTLZA_Decode_DecodeBlock(BGBBTJ_BTLZA_Context *ctx);
BGBBTJ_API int BTLZA_Decode_DecodeStreamSz(byte *ibuf, byte *obuf, int isz,int osz, int *rosz, int flags);
BGBBTJ_API int BTLZA_DecodeStreamSzZl(byte *ibuf, byte *obuf, int isz,int osz, int *rosz, int flags);
BGBBTJ_API int BTLZA_DecodeStreamZl(byte *ibuf, byte *obuf, int isz, int osz);
//AHSRC:btlza_encode.c
void BTLZA_Encode_UpdateWindowByte(BGBBTJ_BTLZA_Context *ctx,byte *s);
void BTLZA_Encode_UpdateWindowString(BGBBTJ_BTLZA_Context *ctx,byte *s, int l);
int BTLZA_Encode_LookupString(BGBBTJ_BTLZA_Context *ctx,byte *cs, byte *ce, int *rl, int *rd);
int BTLZA_Encode_LZCompressBuffer(BGBBTJ_BTLZA_Context *ctx,byte *ibuf, byte *obuf, byte *mbuf, int sz);
int BTLZA_Encode_LZCompressBufferRLE(BGBBTJ_BTLZA_Context *ctx,byte *ibuf, byte *obuf, byte *mbuf, int sz);
void BTLZA_Encode_StatLZRun(BGBBTJ_BTLZA_Context *ctx,byte *cs, int *lstat, int *dstat);
void BTLZA_Encode_StatLZBuffer(BGBBTJ_BTLZA_Context *ctx,byte *tbuf, byte *mbuf, int n, int *lstat, int *dstat);
void BTLZA_Encode_EncodeSymbol(BGBBTJ_BTLZA_Context *ctx, int v);
void BTLZA_Encode_EncodeDistSymbol(BGBBTJ_BTLZA_Context *ctx, int v);
void BTLZA_Encode_EncodeLZRun(BGBBTJ_BTLZA_Context *ctx, byte *cs);
void BTLZA_Encode_EncodeLZBuffer(BGBBTJ_BTLZA_Context *ctx,byte *tbuf, byte *mbuf, int n);
int BTLZA_Encode_EncodeBlock(BGBBTJ_BTLZA_Context *ctx,byte *ibuf, int isz);
int BTLZA_Encode_CheckAllocWindow(BGBBTJ_BTLZA_Context *ctx);
int BTLZA_Encode_EncodeStream_I(BGBBTJ_BTLZA_Context *ctx,byte *ibuf, byte *obuf, int isz, int osz);
int BTLZA_Encode_EncodeStreamLvl(byte *ibuf, byte *obuf,int isz, int osz, int l);
int BTLZA_Encode_EncodeStreamLvlTest(byte *ibuf, byte *obuf,int isz, int osz, int lvl);
//AHSRC:btlza_main.c
void BGBBTJ_BufPNG_DataAdler32_Step16(byte *buf, int *rs1, int *rs2);
u32 BGBBTJ_BufPNG_DataAdler32(void *buf, int sz, u32 lcrc);
u32 BGBBTJ_BufPNG_CRC32(void *buf, int sz, u32 lcrc);
char *BGBBTJ_BufPNG_Fourcc2String(u32 fcc);
void *btlza_malloc(int sz);
void btlza_free(void *ptr);
int BTLZA_DecodeFileStream(FILE *ifd, FILE *ofd, int mode, int flag);
int BTLZA_EncodeFileStream(FILE *ifd, FILE *ofd, char *ifn,int lvl, int flag);
int main(int argc, char *argv[]);
